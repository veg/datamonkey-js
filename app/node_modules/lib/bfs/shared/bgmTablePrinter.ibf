if (matchedEdges){				if (haveAncestralSamples)	{		for (i = 0; i < matchedEdges; i = i+1)		{			_count = _ExecuteSQL (slacDBID, "SELECT COUNT(REPLICATE) FROM BGM_RESULTS_SA WHERE Edge12 + Edge21 >= " + cutoff + " AND " + 								"Codon1 = " + (_res[i])["Codon1"] + " AND Codon2= " + (_res[i])["Codon2"]);			(_res[i])["Support"] = (0+_count[0])/(replicateCount-1)*100.;			(_res[i])["ET"] = (0+(_res[i])["E12"]+(_res[i])["E21"]);					}			keyMap = keyMapSA;		lmx = selLabelMatrixSA;	}	else	{		keyMap = keyMapPLAIN;		lmx = selLabelMatrix;	}	selMx  = AVL2Matrix (_res, keyMap);		fprintf (stdout, "<DIV CLASS='RepClassSM'><form action='",BASE_CGI_URL_STRING,"slacpvalue.pl' method = 'GET'>Found <b>",matchedEdges,					   "</b> pairs of interactions (<input type = 'hidden' name = 'file' value = '",					   filePrefix,"'><input type = 'text' name = 'pvalue' value = '",					   cutoff,					   "' size = '5'> posterior probability <input type = 'hidden' value = '6' name = 'task'><input type = 'submit' value = 'Retabulate'>)<p>",PrintASCIITable  (selMx, lmx,1),"</form>",					   	tableLegendBasicHead);					   		if (haveAncestralSamples)	{		fprintf (stdout, tableLegendExtra);	}	fprintf (stdout,tableLegendBasicFoot,"</DIV>");}else{	fprintf (stdout, "<DIV CLASS='RepClassSM'><form action='",BASE_CGI_URL_STRING,"slacpvalue.pl' method = 'GET'>Found no co-evolving selected sites (<input type = 'hidden' name = 'file' value = '",					  filePrefix,"'><input type = 'text' name = 'pvalue' value = '",					   cutoff,					   "' size = '5'> posterior probability <input type = 'hidden' value = '6' name = 'task'><input type = 'submit' value = 'Retabulate'>)</form>",					   "</DIV>");}	