mySplits = {};myTrees  = {};filterCoverage    = {ds.sites,1};filterCodonBounds = {_pCount,2};for (_k2 = 0; _k2 < _pCount; _k2 = _k2 + 1){	if (Columns(DATA_FILE_PARTITION_MATRIX) == 0)	{		mySplits[_k2] = Format(0,10,0)+"-"+Format(ds.sites-1,10,0);		myTrees [_k2] = DATAFILE_TREE;	}	else	{		_pos = splitOnRegExp(DATA_FILE_PARTITION_MATRIX[1][_k2],"\\-");		if (genCodeID>=0)		{			_r1 = (0+_pos[0])%3;			if (_r1 == 2)			{				_r1 = (0+_pos[0])$3*3+3;			}			else			{				_r1 = (0+_pos[0])$3*3;								}			_r2 = (0+_pos[1])%3;			if (_r2 >= 1)			{				_r2 = (0+_pos[1])$3*3+2;			}			else			{				_r2 = (0+_pos[1])$3*3-1;								}					}		else		{			_r1 = (0+_pos[0]);			_r2 = (0+_pos[1]);				}		filterCodonBounds[_k2][0] = _r1;		filterCodonBounds[_k2][1] = _r2;				mySplits[_k2] = Format(_r1,10,0)+"-"+Format(_r2,10,0);	}	if (Rows(NEXUS_FILE_TREE_MATRIX)>0)	{		ts			  = NEXUS_FILE_TREE_MATRIX[_k2][1];		UseModel (USE_NO_MODEL);		Tree testTree = ts;		testTreeAVL   = testTree^0;		myTrees[_k2]  = KillInternalZeroBranchLengths (testTreeAVL);				if (skipCoverageTest < 1)		{			if (genCodeID >= 0)			{				DataSetFilter testFilter = CreateFilter (filteredData,3,mySplits[_k2],"",GeneticCodeExclusions);				for (k=0; k<testFilter.sites*3;k=k+1)				{					filterCoverage[testFilter.site_map[k]] = filterCoverage[testFilter.site_map[k]] + 1;				}			}			else			{				DataSetFilter testFilter = CreateFilter (filteredData,1,mySplits[_k2]);				for (k=0; k<testFilter.sites;k=k+1)				{					filterCoverage[testFilter.site_map[k]] = filterCoverage[testFilter.site_map[k]] + 1;				}			}		}	}}